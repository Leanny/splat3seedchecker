{"version":3,"file":"static/js/1296.01e1abcf.chunk.js","mappings":"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","sources":["webpack://splat3seedchecker/./src/containers/Database/GearEditor.module.css?e974","containers/Database/GearEditor.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GearEditor\":\"GearEditor_GearEditor__Q+-ms\",\"GearImage\":\"GearEditor_GearImage__Tf8cp\",\"BrandImage\":\"GearEditor_BrandImage__fMGgN\",\"MainAbility\":\"GearEditor_MainAbility__4T+rh\",\"abilityImage\":\"GearEditor_abilityImage__EoNmR\",\"GearName\":\"GearEditor_GearName__Lze6W\",\"Seed\":\"GearEditor_Seed__EeNLt\",\"NewGearArea\":\"GearEditor_NewGearArea__iBDya\",\"Subs\":\"GearEditor_Subs__3-hoZ\",\"Control\":\"GearEditor_Control__QhdWa\",\"abilitiyList\":\"GearEditor_abilitiyList__z4sgW\",\"abilityHeader\":\"GearEditor_abilityHeader__qE-pE\",\"Save\":\"GearEditor_Save__TLjlZ\",\"GearList\":\"GearEditor_GearList__HKEbt\",\"GearListElem\":\"GearEditor_GearListElem__A5FEm\",\"Button\":\"GearEditor_Button__e+v7M\",\"ButtonDelete\":\"GearEditor_ButtonDelete__YpeHO\",\"Table\":\"GearEditor_Table__Ps5N2\",\"TableHead\":\"GearEditor_TableHead__g8CbM\",\"ContentNotFound\":\"GearEditor_ContentNotFound__SWkgs\",\"TDEven\":\"GearEditor_TDEven__hZeoD\",\"TDEven2\":\"GearEditor_TDEven2__vDHOa\",\"TDOdd\":\"GearEditor_TDOdd__KWDiU\",\"TableAbility\":\"GearEditor_TableAbility__O-XOE\",\"BrandImg\":\"GearEditor_BrandImg__Smwuc\",\"GearImg\":\"GearEditor_GearImg__ZIqHI\"};","import Modal from \"../../components/UI/Modal/Modal\"\r\nimport classes from \"./GearEditor.module.css\"\r\nimport React from \"react\"\r\nimport gearHead from \"../../assets/json/parameters/GearInfoHead.json\"\r\nimport gearClothes from \"../../assets/json/parameters/GearInfoClothes.json\"\r\nimport gearShoes from \"../../assets/json/parameters/GearInfoShoes.json\"\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport { getName, skillImage, brandImage, gearImage, SkillIDsRev, SkillIDs } from \"../../Utils\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst GearEditor = props => {\r\n    const newType = props.newType\r\n    const newGear = props.newGearId\r\n    const langList =\r\n        newType === 0\r\n            ? \"CommonMsg.Gear.GearName_Head\"\r\n            : newType === 1\r\n            ? \"CommonMsg.Gear.GearName_Clothes\"\r\n            : \"CommonMsg.Gear.GearName_Shoes\"\r\n    const gearList = newType === 0 ? gearHead : newType === 1 ? gearClothes : gearShoes\r\n    const pgear = gearList.filter(elem => elem.Id === newGear)\r\n    const gear = pgear.length === 0 ? null : pgear[0]\r\n    return (\r\n        <Modal show={props.show} modalClosed={props.onHide} wide={newGear === -1}>\r\n            {newGear === -1 ? (\r\n                <GearList currentGearList={props.currentGearList} onClick={props.newGearHandler} />\r\n            ) : (\r\n                <GearElement\r\n                    onSave={props.onSave}\r\n                    onDelete={props.onDelete}\r\n                    seed={props.newSeed}\r\n                    main={props.newMain}\r\n                    gear={gear}\r\n                    langList={langList}\r\n                    seedValidator={props.seedValidator}\r\n                    loadAbility={props.loadAbility}\r\n                    loadAbilityHandler={props.loadAbilityHandler}\r\n                    abilityOverwriteHandler={props.abilityOverwriteHandler}\r\n                    type={newType}\r\n                    history={props.history}\r\n                    historyDrinks={props.historyDrinks}\r\n                    keyset={props.keyset}\r\n                    generateSeedHandler={props.generateSeedHandler}\r\n                />\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst GearList = props => {\r\n    return (\r\n        <div className={classes.GearList}>\r\n            {gearHead\r\n                .filter(elem => elem.HowToGet !== \"Impossible\")\r\n                .filter(elem => props.currentGearList.HaveGearHeadMap[elem.Id] === undefined)\r\n                .map((elem, idx) => {\r\n                    return (\r\n                        <div key={idx} className={classes.GearListElem} onClick={() => props.onClick(elem.Id, 0)}>\r\n                            <img src={gearImage(elem.__RowId)} alt={elem.__RowId} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            {gearClothes\r\n                .filter(elem => elem.HowToGet !== \"Impossible\")\r\n                .filter(elem => props.currentGearList.HaveGearClothesMap[elem.Id] === undefined)\r\n                .map((elem, idx) => {\r\n                    return (\r\n                        <div key={idx} className={classes.GearListElem} onClick={() => props.onClick(elem.Id, 1)}>\r\n                            <img src={gearImage(elem.__RowId)} alt={elem.__RowId} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            {gearShoes\r\n                .filter(elem => elem.HowToGet !== \"Impossible\")\r\n                .filter(elem => props.currentGearList.HaveGearShoesMap[elem.Id] === undefined)\r\n                .map((elem, idx) => {\r\n                    return (\r\n                        <div key={idx} className={classes.GearListElem} onClick={() => props.onClick(elem.Id, 2)}>\r\n                            <img src={gearImage(elem.__RowId)} alt={elem.__RowId} />\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GearElement = props => {\r\n    const { t } = useTranslation()\r\n\r\n    const name = props.gear === null ? \"\" : getName(t, props.langList, props.gear)\r\n    const gear_image = props.gear === null ? skillImage(\"Unknown\") : gearImage(props.gear.__RowId)\r\n    const brand_image = props.gear === null ? null : brandImage(props.gear.Brand)\r\n    return (\r\n        <div className={classes.GearEditor}>\r\n            <div className={classes.GearName}>{name}</div>\r\n            <div className={classes.GearImage}>\r\n                <img\r\n                    src={gear_image}\r\n                    className={classes.GearImg}\r\n                    alt={props.gear === null ? \"Unknown\" : props.gear.__RowID}\r\n                />\r\n            </div>\r\n            <div className={classes.BrandImage}>\r\n                {brand_image === null ? null : (\r\n                    <img src={brand_image} alt={props.gear.Brand} className={classes.BrandImg} />\r\n                )}\r\n            </div>\r\n            <div\r\n                className={classes.MainAbility}\r\n                onClick={() => props.loadAbilityHandler(0)}\r\n                style={props.loadAbility === 0 ? { border: \"2px solid var(--border-color)\" } : null}\r\n            >\r\n                <img src={skillImage(props.main)} className={classes.abilityImage} alt={props.main} />\r\n            </div>\r\n            <div className={classes.Subs}>\r\n                <table className={classes.Table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className={classes.TableHead}>{t(\"misc:Common.Slot\")}</th>\r\n                            <th className={classes.TableHead}>{t(\"translation:LayoutMsg.Cmn_CstBase_00.001\")}</th>\r\n                            <th className={classes.TableHead}>{t(\"translation:LayoutMsg.Lobby_Shop_00.T_Drink_00\")}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.history.map((elem, idx) => {\r\n                            return (\r\n                                <tr key={idx} className={(idx & 1) === 0 ? classes.TDEven2 : classes.TDOdd}>\r\n                                    <td>{idx}</td>\r\n                                    <td\r\n                                        className={classes.TableAbility}\r\n                                        onClick={() => props.loadAbilityHandler(2 * idx + 1)}\r\n                                        style={\r\n                                            props.loadAbility === 2 * idx + 1\r\n                                                ? { border: \"2px solid var(--border-color)\" }\r\n                                                : null\r\n                                        }\r\n                                    >\r\n                                        <img\r\n                                            src={skillImage(SkillIDsRev[elem] ? SkillIDsRev[elem] : \"Unknown\")}\r\n                                            alt={SkillIDsRev[elem] ? SkillIDsRev[elem] : \"Unknown\"}\r\n                                            className={classes.abilityImage}\r\n                                        />\r\n                                    </td>\r\n                                    <td\r\n                                        className={classes.TableAbility}\r\n                                        onClick={() => props.loadAbilityHandler(2 * idx + 2)}\r\n                                        style={\r\n                                            props.loadAbility === 2 * idx + 2\r\n                                                ? { border: \"2px solid var(--border-color)\" }\r\n                                                : null\r\n                                        }\r\n                                    >\r\n                                        <img\r\n                                            src={skillImage(\r\n                                                SkillIDsRev[props.historyDrinks[idx]]\r\n                                                    ? SkillIDsRev[props.historyDrinks[idx]]\r\n                                                    : \"Unknown\"\r\n                                            )}\r\n                                            alt={\r\n                                                SkillIDsRev[props.historyDrinks[idx]]\r\n                                                    ? SkillIDsRev[props.historyDrinks[idx]]\r\n                                                    : \"Unknown\"\r\n                                            }\r\n                                            className={classes.abilityImage}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr className={(props.history.length & 1) === 0 ? classes.TDEven2 : classes.TDOdd}>\r\n                            <td>{props.history.length}</td>\r\n                            <td\r\n                                className={classes.TableAbility}\r\n                                onClick={() => props.loadAbilityHandler(2 * props.history.length + 1)}\r\n                                style={\r\n                                    props.loadAbility === 2 * props.history.length + 1\r\n                                        ? { border: \"2px solid var(--border-color)\" }\r\n                                        : null\r\n                                }\r\n                            >\r\n                                <img src={skillImage(\"Unknown\")} alt={\"Unknown\"} className={classes.abilityImage} />\r\n                            </td>\r\n                            <td\r\n                                className={classes.TableAbility}\r\n                                onClick={() => props.loadAbilityHandler(2 * props.history.length + 2)}\r\n                                style={\r\n                                    props.loadAbility === 2 * props.history.length + 2\r\n                                        ? { border: \"1px solid black\" }\r\n                                        : null\r\n                                }\r\n                            >\r\n                                <img src={skillImage(\"Unknown\")} alt={\"Unknown\"} className={classes.abilityImage} />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className={classes.Seed}>\r\n                <Input\r\n                    title={t(\"misc:Common.Seed\")}\r\n                    changed={props.seedValidator}\r\n                    val={`0x${(props.seed >>> 0).toString(16)}`}\r\n                />\r\n            </div>\r\n            {props.keyset ? (\r\n                <div className={classes.NewGearArea}>\r\n                    <Input\r\n                        title={t(\"misc:Database.BrandNewGear\")}\r\n                        type=\"checkbox\"\r\n                        changed={props.generateSeedHandler}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n            <div className={classes.Control}>\r\n                {props.loadAbility !== -1 ? (\r\n                    <div className={classes.extraZone}>\r\n                        <div className={classes.abilityHeader}>{t(\"translation:LayoutMsg.Cmn_CstBase_00.001\")}</div>\r\n                        <div className={classes.abilitiyList}>\r\n                            {Object.keys(SkillIDs)\r\n                                .filter(elem => {\r\n                                    return (\r\n                                        SkillIDs[elem] < 100 ||\r\n                                        SkillIDs[elem] === 255 ||\r\n                                        (props.loadAbility === 0 &&\r\n                                            props.type === 0 &&\r\n                                            SkillIDs[elem] >= 100 &&\r\n                                            SkillIDs[elem] <= 103) ||\r\n                                        (props.loadAbility === 0 &&\r\n                                            props.type === 1 &&\r\n                                            SkillIDs[elem] >= 104 &&\r\n                                            SkillIDs[elem] <= 108) ||\r\n                                        (props.loadAbility === 0 &&\r\n                                            props.type === 2 &&\r\n                                            SkillIDs[elem] >= 109 &&\r\n                                            SkillIDs[elem] <= 111)\r\n                                    )\r\n                                })\r\n                                .map((ability, idx) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={idx}\r\n                                            onClick={() =>\r\n                                                props.abilityOverwriteHandler(props.loadAbility, SkillIDs[ability])\r\n                                            }\r\n                                        >\r\n                                            <img\r\n                                                src={skillImage(ability)}\r\n                                                className={classes.abilityImage}\r\n                                                alt={ability}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            <div className={classes.Save}>\r\n                <button className={classes.Button} onClick={props.onSave}>\r\n                    {t(\"misc:Database.ButtonSave\")}\r\n                </button>\r\n                <button className={classes.ButtonDelete} onClick={props.onDelete}>\r\n                    {t(\"misc:Common.Delete\")}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GearEditor\r\n"],"names":["GearList","props","className","classes","gearHead","elem","HowToGet","filter","undefined","currentGearList","HaveGearHeadMap","Id","map","idx","onClick","src","gearImage","__RowId","alt","gearClothes","HaveGearClothesMap","gearShoes","HaveGearShoesMap","GearElement","t","useTranslation","name","gear","getName","langList","gear_image","skillImage","brand_image","brandImage","Brand","__RowID","loadAbilityHandler","style","loadAbility","border","main","history","SkillIDsRev","historyDrinks","length","Input","title","changed","seedValidator","val","seed","toString","keyset","type","generateSeedHandler","Object","keys","SkillIDs","ability","abilityOverwriteHandler","onSave","onDelete","newType","newGear","newGearId","pgear","Modal","show","modalClosed","onHide","wide","newGearHandler","newSeed","newMain"],"sourceRoot":""}